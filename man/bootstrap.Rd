% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bs_sass.R
\name{bootstrap}
\alias{bootstrap}
\alias{bootstrap_sass}
\title{Compile Bootstrap 4 (or 3) SASS with (optional) theming}
\usage{
bootstrap(
  theme = bs_theme_get(),
  sass_options = sass::sass_options(output_style = "compressed"),
  cache = sass::sass_cache_get(),
  jquery = jquerylib::jquery_core(3),
  precompiled = TRUE
)

bootstrap_sass(
  rules = list(),
  theme = bs_theme_get(),
  write_attachments = FALSE,
  ...
)
}
\arguments{
\item{theme}{one of the following: 1. The result of \code{\link[=bs_theme_get]{bs_theme_get()}} (i.e.,
the current global theme). 2. \code{NULL}, which means use the latest version of
Bootstrap with no custom theming. 3. A string containing a bootswatch theme
and/or a Bootstrap major version. To specify both, use the syntax
\code{"theme@version"}, (e.g., \code{"cosmo@4"} for Bootstrap 4 cosmo theme with BS3
compatibility). If no version is specified, the latest available version is
used (for more info, see \code{version} in \code{\link[=bs_theme_new]{bs_theme_new()}}). \strong{Note}: this
approach ignores global themes (i.e., \code{\link[=bs_theme_new]{bs_theme_new()}}) 4. A
\code{\link[sass:sass_layer]{sass::sass_layer()}} which contains a bootstraplib theme. Useful for adding
custom layers to the current theme without affecting the global state
(e.g., \code{sass::sass_layer_merge(bs_theme_get(), my_layer())}).}

\item{sass_options}{see \code{\link[sass:sass_options]{sass::sass_options()}}.}

\item{cache}{This can be a directory to use for the cache, a \link[sass]{FileCache}
object created by \code{\link[sass:sass_file_cache]{sass_file_cache()}}, or \code{FALSE} or \code{NULL} for no caching.}

\item{jquery}{See \code{\link[jquerylib:jquery_core]{jquerylib::jquery_core()}}.}

\item{precompiled}{Before compiling the theme object, first look for a
precompiled CSS file for the given \code{version}.  If this option is \code{TRUE} and
a precompiled CSS file exists for the theme object, it will be fetched
immediately and not compiled. At the moment, we only provide precompiled
CSS for "stock" builds of Bootstrap (i.e., no theming additions, bootswatch
themes, or non-default \code{sass_options}).}

\item{rules}{Sass styling rules that may reference \code{theme} \code{defaults} and \code{declarations}.}

\item{write_attachments}{If the input contains \code{\link[sass:sass_layer]{sass_layer()}} objects that
have file attachments, and \code{output} is not \code{NULL}, then copy the file
attachments to the directory of \code{output}. (Defaults to \code{NA}, which merely
emits a warning if file attachments are present, but does not write them to
disk; the side-effect of writing extra files is subtle and potentially
destructive, as files may be overwritten.)}

\item{...}{arguments passed along to \code{\link[sass:sass]{sass::sass()}}.}
}
\value{
a list of HTML dependencies containing Bootstrap CSS, Bootstrap
JavaScript, and \code{jquery}. This list may contain additional HTML
dependencies if the \code{theme} calls for it (e.g., \code{version = "4+3"} contains
an additional JavaScript dependency).
}
\description{
Use \code{bootstrap()} to compile Bootstrap Sass into CSS and return it, along
with other HTML dependencies, as a list of \code{\link[htmltools:htmlDependency]{htmltools::htmlDependency()}}s (if
you just want the CSS as a string, and a \code{\link[=bs_theme_new]{bs_theme_new()}} has been set, you
can call \code{sass::sass()} on the return value of \code{\link[=bs_theme_get]{bs_theme_get()}}). Use
\code{bootstrap_sass()} if you can assume Bootstrap already exists on the page,
but you want to leverage Bootstrap utilities (e.g., variables, functions, or
mixins) to generate additional CSS rules (as a string that can be included as
a \verb{<style>} tag via \code{tags$style(css)}).
}
\examples{

# Function to preview the styling a (primary) Bootstrap button
library(htmltools)
button <- tags$a(class = "btn btn-primary", href = "#", role = "button", "Hello")
preview_button <- function(x) {
  browsable(tags$body(x, button))
}

# Latest bootstrap
preview_button(bootstrap())
# Bootstrap 3
preview_button(bootstrap("3"))
# Bootswatch minty theme
preview_button(bootstrap("minty"))
# Bootswatch sketchy theme
preview_button(bootstrap("sketchy"))
# Bootswatch solar theme with BS3 compatibility
preview_button(bootstrap("solar@4+3"))

}
\seealso{
\code{\link[=bs_theme_set]{bs_theme_set()}}
}
